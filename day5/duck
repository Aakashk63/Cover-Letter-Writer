import os
import streamlit as st
from langchain.agents import initialize_agent, Tool
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain.utilities import DuckDuckGoSearchAPIWrapper
from langchain.agents.agent_types import AgentType

# ✅ Gemini API Key (don't share publicly)
os.environ["GOOGLE_API_KEY"] = "AIzaSyCyTmuFLS0QTFGkw5w9uJWQXjnWpdOUxEI"

# ✅ UI Setup
st.set_page_config(page_title="🎓 College Research Agent", layout="centered")
st.title("🎓 College Research Agent")
st.caption("Ask about top colleges in any Indian city and get a smart summary.")

# ✅ Search Query Input
query = st.text_input("🔍 Ask your question:", placeholder="Top private engineering colleges in Bangalore")

# ✅ Initialize LangChain LLM & Tools
try:
    llm = ChatGoogleGenerativeAI(model="models/gemini-2.0-flash", temperature=0.7)
    search = DuckDuckGoSearchAPIWrapper()

    # DuckDuckGo as a Tool
    search_tool = Tool(
        name="DuckDuckGo College Search",
        func=search.run,
        description="Searches for real-time college information from the web."
    )

    # Agent Setup
    agent = initialize_agent(
        tools=[search_tool],
        llm=llm,
        agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,
        verbose=True
    )

    # Button Click Logic
    if st.button("🔎 Search & Summarize") and query:
        with st.spinner("Searching and summarizing..."):
            try:
                response = agent.run(query)
                st.success("✅ Summary")
                st.write(response)
            except Exception as e:
                st.error(f"❌ Failed to generate response: {e}")
except Exception as err:
    st.error(f"Initialization error: {err}")

# 💡 Example Prompts
with st.expander("💡 Example Prompts"):
    st.markdown("""
    - Top private engineering colleges in Bangalore  
    - Best medical colleges in Tamil Nadu  
    - Private MBA colleges in Mumbai with good placement  
    - Cheapest private colleges in India for BTech  
    - Top law colleges in Delhi  
    """)
