{
  "nodes": [
    {
      "parameters": {
        "triggerTimes": [
          {
            "mode": "everyDay",
            "hour": 18,
            "minute": 0
          }
        ]
      },
      "id": "1",
      "name": "Daily Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        200,
        200
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "sheetId": "YOUR_SHEET_ID",
        "range": "MeetingNotes!A2:B",
        "valueRenderMode": "FORMATTED_VALUE",
        "dateTimeRenderOption": "FORMATTED_STRING"
      },
      "id": "2",
      "name": "Read Meeting Notes",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [
        400,
        200
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_CREDENTIAL_ID",
          "name": "Google Sheets OAuth"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const actionRegex = /Task:\\s*(.+?),\\s*Assigned to:\\s*(\\S+@\\S+)/gi;\nconst results = [];\nfor (const item of items) {\n  const text = item.json.Notes;\n  let match;\n  while ((match = actionRegex.exec(text)) !== null) {\n    results.push({ json: { task: match[1], email: match[2] } });\n  }\n}\nreturn results;"
      },
      "id": "3",
      "name": "Extract Action Items",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        600,
        200
      ]
    },
    {
      "parameters": {
        "functionCode": "const grouped = {};\nfor (const item of items) {\n  const email = item.json.email;\n  if (!grouped[email]) grouped[email] = [];\n  grouped[email].push(item.json.task);\n}\nreturn Object.entries(grouped).map(([email, tasks]) => ({ json: { email, tasks } }));"
      },
      "id": "4",
      "name": "Group by Person",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        800,
        200
      ]
    },
    {
      "parameters": {
        "fromEmail": "your-email@example.com",
        "toEmail": "={{$json[\"email\"]}}",
        "subject": "Post-Meeting Action Items",
        "text": "Hello,\n\nHere are your action items from today\u2019s meeting:\n\n{{ $json[\"tasks\"].map((task, i) => (i+1) + '. ' + task).join('\\n') }}\n\nPlease ensure they are addressed.\n\nRegards,\nProject Team"
      },
      "id": "5",
      "name": "Send Emails",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1000,
        200
      ]
    }
  ],
  "connections": {
    "Daily Trigger": {
      "main": [
        [
          {
            "node": "Read Meeting Notes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Meeting Notes": {
      "main": [
        [
          {
            "node": "Extract Action Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Action Items": {
      "main": [
        [
          {
            "node": "Group by Person",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group by Person": {
      "main": [
        [
          {
            "node": "Send Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "id": "post-meeting-action-tracker"
}
